<!DOCTYPE html>
<html>

<head>
    <title>HAR Upload</title>
    <meta charset="utf-8">
    <script src="/index.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">
     
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>

<body>

    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container-fluid">
            <div class="navbar-brand">HAR ANALYZER</div>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="http://localhost:3000/login/home">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="http://localhost:3000/home/upload">Upload-Files</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="http://localhost:3000/home/profile">Profile-Information</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="http://localhost:3000"> Log-Out</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <% if (messages.success) { %>
        <div class="alert alert-success">
            <%= messages.success %>
        </div>
        <% } %>

            <h1 style="text-align: center; margin-top: 100px;">Here you can upload - filter - your local HAR Files</h1>

            <div style="text-align: center" class="input-group">
                <form action="" method="POST">
                    <input type="file" class="form-control" id="har_file" name="har_file" accept=".json,.har"
                        aria-describedby="inputGroupFileAddon04" aria-label="Upload">

            </div>

            <div class="div_submit">

                <button class="btn btn-outline-secondary" style="text-align: center; margin-top: 100px; " type="submit"
                    id="filter_btn">FILTER</button>

                <button class="btn btn-outline-secondary" style="text-align: center; margin-top: 100px; display: none;" type="submit"
                    id="submit_har">SUMBIT</button>
            </div> 
            <div class="local_download">     
                <button class="btn btn-outline-secondary" style="text-align: center; margin-top: 100px; display: none;" type="submit"
                    id="save_local_button">Save local</button>

            </div>
            <div class="div_buttons" id="div_buttons"></div>
            <h1 style="text-align: center; margin-top: 100px;">HAR Preview</h1>
            <div style="text-align: center" class="input-group">
                <p id="har_Preview"></p>>
            </div>




</body>

<script>
    const fileSelector = document.getElementById('har_file');
    fileSelector.addEventListener('change', (event) => {
        const fileList = event.target.files;
        for (const file of fileList) {
            console.log(file.name);
        }
        for (const file of fileList) {
            readfile(file)
        }
    });
    //READ FILE
    function readfile(file) {
        // Check if the file is an image.
        if (file.type && file.type.indexOf('text') === -1) {
            console.log('File is not in proper format.', file.type, file);
            return;
        }

        const reader = new FileReader();
        reader.addEventListener('load', (event) => {
            fileContents = event.target.result;
            return fileContents;
        });
        reader.readAsText(file);

    }


    const har_filter_btn = document.getElementById('filter_btn');
    har_filter_btn.addEventListener('click', (event) => {
        filter();
        const har_submit = document.getElementById('submit_har');
        const save_local_btn = document.getElementById('save_local_button');
        har_submit.style.display = "block";
        save_local_btn.style.display = "block";
        event.preventDefault();
    });

    const har_submit = document.getElementById('submit_har');
    har_submit.addEventListener('click', (event) => {
        submit_file();
        /*
        var btn = document.createElement("BUTTON");
        btn.innerHTML = "CLICK ME";  
        */                 
        //document.body
        //document.getElementById('div_buttons').appendChild(btn);
        //console.log(window.har_file);
        event.preventDefault();
    });

    //const filePreview = document.getElementById('har_Preview');
    /*
    //PREVIEW
    har_submit.addEventListener('change', (event) => {
        //filePreview.innerHTML = window.har_file;
        console.log(window.har_file);
    });
    return false;
    */
    // SUBMIT HAR FILE    
    async function submit_file() {
        //USER DATA FOR 
        let user_data = await UserData();
        console.log(user_data);
        let har_file = JSON.parse(window.har_file);
        har_file.log.user_data = new Object();
        har_file.log.user_data.latitude = user_data.latitude;
        har_file.log.user_data.longitude = user_data.longitude;
        har_file.log.user_data.organization_name = user_data.organization_name;

        console.log(har_file.user_data);
        console.log(har_file);
        let response = await fetch('/upload/har', {
            method: "POST",
            body: JSON.stringify(har_file),
            headers: {
                "Content-Type": "application/json"
            }
        }
        );
        let response_json = await response.json();
        let myJson = await myJson();
    }

    //save local
    const save_local_btn = document.getElementById('save_local_button');
    save_local_btn.addEventListener('click', (event) => {
        download_har();
        event.preventDefault();
    });
    
    function download_har(){
        const a = document.createElement("a");
        a.href = URL.createObjectURL(new Blob([window.har_file], {
        type: "text/plain"
        }));
        a.setAttribute("download", "data.txt");
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a); 
    }

    async function UserData() {
        IPAddress = await GetUserIp();
        console.log(IPAddress);
        const Url = `https://get.geojs.io/v1/ip/geo/${IPAddress}.json`;
        return fetch(Url)
            .then(response => response.json())
            .then(data => {
                console.log(data.country_code);
                return data;
            })
            .catch(error => console.log(error));
    }
    /* GET USER IP */
    function GetUserIp() {
        const Url = "https://api.ipify.org?format=json";
        return fetch(Url)
            .then(response => response.json())
            .then(data => {
                console.log(data.ip);
                return data.ip;
            })
            .catch(error => console.log(error));
    }
</script>

</html>